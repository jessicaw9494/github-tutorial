{"name":"GitHub-tutorial","tagline":"Let's Git Ready for Github","body":"# GitHub Tutorial\r\n\r\n_by Jessica Wu_\r\n\r\n---\r\n## Git vs. GitHub\r\n _**Git**_ is used for version control which takes a snapshot of someones code. \r\nThis is helpful for someone who makes mistakes in the future. \r\nFuthermore, Git does not require Github. \r\n\r\nIn contrast, _**Github**_ does require Git. Github is more specific than Git because it takes \r\ndown every change made and who contributed to that change. \r\n\r\n---\r\n## Initial Setup\r\n_**Initial Setup**_ is used to put a title on any work changed by a person. It is a very convenient\r\nway of saving your project without continual log in.  \r\n\r\n* Set up your Github account:\r\n    1. To begin your Git&Github journey, you would need to create a Github account at [github.com](github.com). \r\n    This is where you can view and share your codes as a repository (folder).  \r\n    2. Next, make an account on [c9.io](c9.io) and sign in with your Github account. This website is useful \r\n    for writing and saving all of your code while performing Git and Github. \r\n* Know your _**SSH Keys**_:\r\n    * SSH (Secure SHell) is a URL or the location of your remote repo. Although _**HTTPS**_ is also a functional URL, HTTPS requires\r\n     you to repeatedly log in. However, SSH is more convenient because it only requires \r\n     you to log in once.  \r\n    * To locate your SSH URL, it can be found in your Github account. This URL is used to clone into c9.\r\n* What is _**git config**_?:\r\n    * `git config` is a command to save your user.name and user.email. Thus, the site can remember you were the \r\n     one who committed the changes. \r\n    * The code to do so is `$ git config --global user.name \"your-name\"` and then \r\n     `$ git config --global user.email your-email@site.com\"` \r\n\r\n---\r\n## Repository Setup\r\nA _**Repository Setup**_ is a file that contains your code in Github. You can make as many repos as you want\r\nin a workspace. \r\n\r\n* What is _**git init**_?\r\n    * `git init` is a command to create a new Git repository. It is only mandatory to use this command once.\r\n* How do you _**add**_ and _**commit**_?\r\n    * Add and commit is and important step to do before you push your code to your repository to view on \r\n    Github. But you must remember to `cd` into your folder first. \r\n   1. To add a remote repo, you do `git add repo-name`\r\n   2. Next, to commit, you want to do `git commit -m \"message\"`\r\n* How to make a new repo on Github?\r\n   1. To make a new repo on Github, all you have to do is press the '+' button right next to your profile icon \r\n   on Github. \r\n   2. From there, press 'New Repository', put in your repo name, and press \"Create new repository\".\r\n* What is a _**remote**_?\r\n    * A remote is a setup to connect your current repository to an external one that lives in Github.\r\n\r\n---\r\n## Workflow & Commands\r\n* What are the common workflows and commands you will need to know when using Git&Github?\r\n    * `git status`: This command is to make sure everything you are typing has no errors and will inform you \r\n    when you do. It is recommended to use this command often.\r\n    * `git add `: This command will let you add a remote repository.\r\n    * `git commit -m \"\"`: This command will allow you to write a message as a reminder of what change you had made.\r\n    * `git push`: This command will push your changes to Github in order to be viewed by the public and/or shared\r\n    to the public.\r\n\r\n---\r\n## Collaboration\r\nHave you ever wanted to collaborate on a project with someone, fix an error that they made, or simply improve their \r\ncode? Well you can with Git&Github!\r\n\r\n* _**Fork and Clone!**_: Forking and Cloning is an easy way to bring someone else's repository to you and then you \r\ncan make the changes.\r\n    * To Fork, all you need to do is press the _'Fork'_ button on the other person's repository page and you know when\r\n    it's complete when you see `forked from username/repositoryname` under your username.\r\n    * To Clone, go to your c9 account and type in 'git clone' with the SSH URL that can found in the right hand side\r\n    of your repository page on Github. \r\n* Just because you have saved and copied one's project does not mean your done! You must share and be accepted by the\r\nother user! That's why we have _**Pull Requests**_.\r\n    * To make your pull request, you must press the green squared button on your Github repo page and then press \r\n    _'Create pull request'_.\r\n    * From there, the other person can view your edits/changes before they accept your changes.\r\n\r\n---\r\n## Error Handling\r\n\r\nWhen you come across an error, no fret! \r\n\r\n* If you ever `init` in the wrong directory, you can `cd` your way out and then remove your repository by using the\r\ncommand `rm -rf dir-name`.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}